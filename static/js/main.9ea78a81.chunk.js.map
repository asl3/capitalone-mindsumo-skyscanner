{"version":3,"sources":["components/Places.js","components/AirportInfo.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Places","props","className","places","map","place","id","PlaceId","PlaceName","CountryId","RegionId","CityId","OriginPlace","AirportInfo","useState","setPlaces","query","setQuery","showPlaces","setShowPlaces","onSubmit","e","a","reqOptions","method","headers","qString","fetch","URLSearchParams","response","json","console","log","preventDefault","fetchMyAPI","htmlFor","value","onChange","target","required","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAkCeA,MA/Bf,SAAgBC,GACZ,OACI,qBAAKC,UAAY,SAAjB,SACI,kCACI,gCACI,+BACI,4CACA,8CACA,4CACA,2CACA,yCACA,mDAGR,gCACKD,EAAME,QAAUF,EAAME,OAAOC,KAAI,SAAAC,GAC9B,OAAQ,qBAAIC,GAAID,EAAME,QAAd,UACJ,6BAAKF,EAAME,UACX,6BAAKF,EAAMG,YACX,6BAAKH,EAAMI,YACX,6BAAKJ,EAAMK,WACX,6BAAKL,EAAMM,SACX,6BAAKN,EAAMO,4BCmBxBC,MAxCf,WAAwB,IAAD,EACSC,mBAAS,IADlB,mBACZX,EADY,KACJY,EADI,OAEOD,mBAAS,IAFhB,mBAEZE,EAFY,KAELC,EAFK,OAGgBH,oBAAS,GAHzB,mBAGZI,EAHY,KAGDC,EAHC,KA+BnB,OAAO,sBAAKjB,UAAU,cAAf,UACH,uBAAMkB,SA3BV,SAAsBC,GAAG,4CAErB,gCAAAC,EAAA,6DACUC,EAAa,CACfC,OAAQ,MACRC,QAAS,CACL,iBACA,qDACA,kBACA,wDACA,gBAAkB,IAGpBC,EAAU,CACZ,MAASV,GAZjB,SAcyBW,MAAM,4GAA8G,IAAIC,gBAAgBF,GAAUH,GAd3K,cAcQM,EAdR,gBAeqBA,EAASC,OAf9B,OAeID,EAfJ,OAgBId,EAAUc,EAAS7B,QACnB+B,QAAQC,IAAIH,EAAS7B,QAjBzB,6CAFqB,sBACrBqB,EAAEY,iBADmB,mCAqBrBC,GACAjB,EAAS,IACTE,GAAc,IAId,UACI,uBAAOgB,QAAQ,aAAf,6BACA,uBAAO7B,GAAG,aAAa8B,MAAOpB,EAAOqB,SAAU,SAAChB,GAAD,OAAOJ,EAASI,EAAEiB,OAAOF,QAAQG,UAAQ,IACxF,wBAAQrC,UAAU,SAAlB,uBAEFgB,EAAa,cAAC,EAAD,CAAQf,OAAQA,IAAoB,iC,MChC5CqC,MANf,SAAgBvC,GACZ,OACI,sDCWOwC,MAVf,WACE,OACE,sBAAKvC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCSwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCOdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9ea78a81.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Places.css';\r\n\r\nfunction Places(props) { \r\n    return (\r\n        <div className = \"places\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Airport ID</th>\r\n                        <th>Airport Name</th>\r\n                        <th>Country ID</th>\r\n                        <th>Region ID</th>\r\n                        <th>City ID</th>\r\n                        <th>Country Name</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.places && props.places.map(place => {\r\n                        return (<tr id={place.PlaceId}>\r\n                            <th>{place.PlaceId}</th>\r\n                            <th>{place.PlaceName}</th>\r\n                            <th>{place.CountryId}</th>\r\n                            <th>{place.RegionId}</th>\r\n                            <th>{place.CityId}</th>\r\n                            <th>{place.OriginPlace}</th>\r\n                         </tr>)\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Places;","import React, {useState} from 'react';\r\nimport './AirportInfo.css';\r\nimport Places from './Places';\r\n\r\nfunction AirportInfo() {\r\n    const [places, setPlaces] = useState([])\r\n    const [query, setQuery] = useState(\"\")\r\n    const [showPlaces,setShowPlaces] = useState(false)\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        async function fetchMyAPI() {\r\n            const reqOptions = {\r\n                method: 'GET',\r\n                headers: {\r\n                    \"x-rapidapi-key\": \r\n                    \"f4d96e263bmshfb7569b1ceca5c6p16340djsn1967d8e15c5e\",\r\n                    \"x-rapidapi-host\": \r\n                    \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\r\n                    \"useQueryString\": true\r\n                }\r\n            }\r\n            const qString = {\r\n                \"query\": query\r\n            }\r\n            let response = await fetch('https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?' + new URLSearchParams(qString), reqOptions)    \r\n            response = await response.json() \r\n            setPlaces(response.Places)\r\n            console.log(response.Places)\r\n        }\r\n        fetchMyAPI()\r\n        setQuery(\"\")\r\n        setShowPlaces(true) \r\n    }\r\n    \r\n    return <div className=\"airportinfo\">\r\n        <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"queryInput\">City or Country</label>\r\n            <input id=\"queryInput\" value={query} onChange={(e) => setQuery(e.target.value)} required />\r\n            <button className=\"search\">Submit</button>\r\n        </form>\r\n        { showPlaces ? <Places places={places}></Places> : <></>}\r\n    </div>\r\n}\r\nexport default AirportInfo;\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header(props) { \r\n    return (\r\n        <h1>Airport Information</h1>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport './App.css';\nimport AirportInfo from './components/AirportInfo.js';\nimport Places from './components/Places.js';\nimport Header from './components/Header.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <AirportInfo />\n      <Places />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './App';\n\n// const myfirstelement = <h1>Hello React!</h1>\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}